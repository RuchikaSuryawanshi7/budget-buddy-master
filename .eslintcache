[{"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\index.js":"1","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\App.js":"2","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\context\\context.js":"3","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\styles.js":"4","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\context\\contextReducer.js":"5","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Learn\\learn.jsx":"6","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\List\\List.jsx":"7","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\index.js":"8","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\List\\styles.js":"9","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\InfoCard.jsx":"10","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Snackbar\\Snackbar.jsx":"11","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Main.jsx":"12","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Details\\Details.jsx":"13","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Snackbar\\styles.js":"14","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\useTransactions.js":"15","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Details\\styles.js":"16","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\styles.js":"17","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Form\\Form.jsx":"18","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\constants\\categories.js":"19","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Form\\styles.js":"20","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\utils\\formatDate.js":"21"},{"size":415,"mtime":1649448709787,"results":"22","hashOfConfig":"23"},{"size":1845,"mtime":1649483654233,"results":"24","hashOfConfig":"23"},{"size":1999,"mtime":1649448710448,"results":"25","hashOfConfig":"23"},{"size":552,"mtime":1649448709821,"results":"26","hashOfConfig":"23"},{"size":562,"mtime":1649448710483,"results":"27","hashOfConfig":"23"},{"size":3280,"mtime":1649481538210,"results":"28","hashOfConfig":"23"},{"size":1646,"mtime":1649448710218,"results":"29","hashOfConfig":"23"},{"size":212,"mtime":1649448709967,"results":"30","hashOfConfig":"23"},{"size":399,"mtime":1649454151798,"results":"31","hashOfConfig":"23"},{"size":438,"mtime":1649448709932,"results":"32","hashOfConfig":"23"},{"size":768,"mtime":1649448710304,"results":"33","hashOfConfig":"23"},{"size":1529,"mtime":1649477845143,"results":"34","hashOfConfig":"23"},{"size":694,"mtime":1649452169535,"results":"35","hashOfConfig":"23"},{"size":196,"mtime":1649448710338,"results":"36","hashOfConfig":"23"},{"size":1092,"mtime":1649448709856,"results":"37","hashOfConfig":"23"},{"size":241,"mtime":1649452282462,"results":"38","hashOfConfig":"23"},{"size":490,"mtime":1649448710108,"results":"39","hashOfConfig":"23"},{"size":4822,"mtime":1649448710145,"results":"40","hashOfConfig":"23"},{"size":1558,"mtime":1649478461480,"results":"41","hashOfConfig":"23"},{"size":235,"mtime":1649448710180,"results":"42","hashOfConfig":"23"},{"size":290,"mtime":1649448710525,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"zmgkc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\index.js",[],["92","93"],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\App.js",["94","95","96","97"],"import React, { useEffect, useRef } from 'react';\nimport { Grid } from '@material-ui/core';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport List from './components/Main/List/List';\n\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\n\nimport { Details, Main } from './components';\nimport useStyles from './styles';\nimport Learn from './components/Main/Learn/learn';\n\nconst App = () => {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null)\n\n  const executeScroll = () => main.current.scrollIntoView()    \n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n\n  return (\n    <div>\n      {/* <Learn/> */}\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh'}}>\n        <Grid item xs={12} sm={4} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Main />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.desktop}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.last}>\n          <Details title=\"Expense\" />\n        </Grid>\n        <Card>\n          <CardContent className={classes.cartContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent>\n        </Card>\n        <PushToTalkButtonContainer>\n          <PushToTalkButton />\n        </PushToTalkButtonContainer>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\context\\context.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\styles.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\context\\contextReducer.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Learn\\learn.jsx",["98","99","100","101","102","103","104","105"],"import React from 'react'\r\n\r\nconst Learn = () => {\r\n  return (\r\n    <div>\r\n    <nav className=\"topnav sticky\">\r\n      <a href=\"index.html\">\r\n        <img src=\"{companyLogo}\" alt=\"BigCo Inc. logo\" />\r\n      </a>\r\n      <div>\r\n        <a href=\"track.html\">Track</a>\r\n        <a href=\"learn.html\">Learn</a>\r\n        <a href=\"play.html\">Play</a>\r\n        <a href=\"plan.html\">Plan</a>\r\n        <a href=\"login.html\">Login</a>\r\n      </div>\r\n    </nav>\r\n    <main>\r\n      {/* figure out formatting in css */}\r\n      <h1 className=\"tracktitles\"><b>Learn</b></h1>\r\n      <h3 style={{textAlign: 'center'}}>finance basics</h3>\r\n      {/*\r\n        <div id=\"learn-top\">\r\n            <h1 style=\"font-size:45px\"><b>Learn</b></h1>\r\n            <br />\r\n            <i>\r\n            */}\r\n      <div className=\"toc\">\r\n        <h2>Table of Contents</h2>\r\n        <ol>\r\n          <li style={{fontSize: '20px'}}>~ Basic Vocabulary</li>\r\n          <li style={{fontSize: '20px'}}>~ Budgeting</li>\r\n          <li style={{fontSize: '20px'}}>~ Savings</li>\r\n          <li style={{fontSize: '20px'}}>~ Investments</li>\r\n        </ol>\r\n      </div>\r\n      <br /> <br /> <br /> <br />\r\n      <div id=\"cospace\">\r\n        {/* im putting in an example photo of a character to see if it works */}\r\n        <section>\r\n          <label><img width={150} height={150} src=\"https://media.discordapp.net/attachments/874657099660017725/876313471803879464/Asset_1.png\" />\r\n            <h4 style={{fontSize: '20px'}}>\"Hello! My name is Piggy! Let's start by learning Level 1: Basic Vocab!\"</h4>\r\n          </label>\r\n          <iframe width={1000} height={750} frameBorder={0} src=\"https://edu.cospaces.io/PKV-HWF\" />\r\n        </section>\r\n        <br /> <br /> <br /> <br />\r\n        <section>\r\n          <label><img width={150} height={150} src=\"https://media.discordapp.net/attachments/874657099660017725/876313733452935228/Asset_2.png\" />\r\n            <h4 style={{fontSize: '20px'}}>\"Hey! My name is Max! Let's try to understand Level 2: Budgeting!\"</h4>\r\n          </label>\r\n          <iframe width={1000} height={750} frameBorder={0} src=\"https://edu.cospaces.io/FLZ-LLW\" />\r\n        </section>\r\n        <br /> <br /> <br /> <br />\r\n        <section>\r\n          <label><img width={150} height={150} src=\"https://media.discordapp.net/attachments/874657099660017725/876313752054661160/Asset_3.png\" />\r\n            <h4 style={{fontSize: '20px'}}>\"Hi! My name is Ace! We will now learn Level 3: Savings!\"</h4>\r\n          </label>\r\n          <iframe width={1000} height={750} frameBorder={0} src=\"https://edu.cospaces.io/MEQ-HTE\" />\r\n        </section>\r\n        <br /> <br /> <br /> <br />\r\n        <section>\r\n          <label><img width={150} height={150} src=\"https://media.discordapp.net/attachments/874657099660017725/876313762766913536/Asset_4.png\" />\r\n            <h4 style={{fontSize: '20px'}}>\"Hello, my name is Olivia! Let's learn Level 4: Investments!\"</h4>\r\n          </label>\r\n          <iframe width={1000} height={750} frameBorder={0} src=\"https://edu.cospaces.io/TPD-MJT\" />\r\n        </section>\r\n      </div>\r\n      <br /> <br /> <br />\r\n    </main>\r\n    <footer className=\"footer\">\r\n      © Coink! 2021\r\n      <p> Contact us at coink@gmail.com</p>\r\n    </footer>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Learn\r\n","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\index.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\InfoCard.jsx",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Main.jsx",["106","107","108","109","110","111","112","113"],"import React, { useState, useEffect, useContext } from 'react'\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Grid,\n  Divider,\n} from '@material-ui/core'\nimport { useSpeechContext } from '@speechly/react-client'\nimport { ExpenseTrackerContext } from '../../context/context'\nimport useStyles from './styles'\nimport Form from './Form/Form'\nimport List from './List/List'\nimport InfoCard from '../InfoCard'\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nconst element = <FontAwesomeIcon icon={faCoffee} />\n\nconst ExpenseTracker = () => {\n  const classes = useStyles()\n  const { balance } = useContext(ExpenseTrackerContext)\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader title=\"Financy\" subheader=\"Voice Assistant to track your Expenses\"></CardHeader>\n      <CardContent>\n        <Typography align=\"center\" variant=\"h5\">\n          Total Balance ₹{balance}\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          style={{ lineHeight: '1.5em', marginTop: '20px' }}\n        >\n\n        </Typography>\n        <Divider className={classes.divider} />\n        <Form />\n      </CardContent>\n      {/* <CardContent className={classes.cartContent}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <List />\n          </Grid>\n        </Grid>\n      </CardContent> */}\n    </Card>\n  )\n}\n\nexport default ExpenseTracker\n","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\useTransactions.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Details\\styles.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\styles.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Form\\Form.jsx",["114"],"import React, { useState, useContext, useEffect } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { useSpeechContext } from '@speechly/react-client';\nimport Snackbar from '../../Snackbar/Snackbar';\nimport formatDate from '../../../utils/formatDate';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport useStyles from './styles';\n\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date()),\n};\n\nconst NewTransactionForm = () => {\n  const classes = useStyles();\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const [formData, setFormData] = useState(initialState);\n  const { segment } = useSpeechContext();\n  const [open, setOpen] = React.useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: 'Income' });\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: 'Expense' });\n    }\n\n    setOpen(true);\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === 'add_expense') {\n        setFormData({ ...formData, type: 'Expense' });\n      } else if (segment.intent.intent === 'add_income') {\n        setFormData({ ...formData, type: 'Income' });\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\n        return createTransaction();\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n        return setFormData(initialState);\n      }\n\n      segment.entities.forEach((s) => {\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\n\n        switch (s.type) {\n          case 'amount':\n            setFormData({ ...formData, amount: s.value });\n            break;\n          case 'category':\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: 'Income', category });\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\n              setFormData({ ...formData, type: 'Expense', category });\n            }\n            break;\n          case 'date':\n            setFormData({ ...formData, date: s.value });\n            break;\n          default:\n            break;\n        }\n      });\n\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n        createTransaction();\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n  return (\n    <Grid container spacing={2}>\n      <Snackbar open={open} setOpen={setOpen} />\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n        {segment ? (\n        <div className=\"segment\">\n          {segment.words.map((w) => w.value).join(\" \")}\n        </div>\n      ) : null}\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\n      </Grid>\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\n    </Grid>\n  );\n};\n\nexport default NewTransactionForm;\n","C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\constants\\categories.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\Ruchika\\Downloads\\budget-buddy-master\\budget-buddy-master\\src\\utils\\formatDate.js",["115"],"export default (date) => {\n  const d = new Date(date);\n  let month = `${d.getMonth() + 1}`;\n  let day = `${d.getDate()}`;\n  const year = d.getFullYear();\n\n  if (month.length < 2) { month = `0${month}`; }\n  if (day.length < 2) { day = `0${day}`; }\n\n  return [year, month, day].join('-');\n};\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"120","severity":1,"message":"124","line":7,"column":3,"nodeType":"122","messageId":"123","endLine":7,"endColumn":13},{"ruleId":"120","severity":1,"message":"125","line":8,"column":3,"nodeType":"122","messageId":"123","endLine":8,"endColumn":10},{"ruleId":"120","severity":1,"message":"126","line":17,"column":8,"nodeType":"122","messageId":"123","endLine":17,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":41,"column":18,"nodeType":"129","endLine":41,"endColumn":147},{"ruleId":"130","severity":1,"message":"131","line":44,"column":11,"nodeType":"129","endLine":44,"endColumn":101},{"ruleId":"127","severity":1,"message":"128","line":48,"column":18,"nodeType":"129","endLine":48,"endColumn":147},{"ruleId":"130","severity":1,"message":"131","line":51,"column":11,"nodeType":"129","endLine":51,"endColumn":101},{"ruleId":"127","severity":1,"message":"128","line":55,"column":18,"nodeType":"129","endLine":55,"endColumn":147},{"ruleId":"130","severity":1,"message":"131","line":58,"column":11,"nodeType":"129","endLine":58,"endColumn":101},{"ruleId":"127","severity":1,"message":"128","line":62,"column":18,"nodeType":"129","endLine":62,"endColumn":147},{"ruleId":"130","severity":1,"message":"131","line":65,"column":11,"nodeType":"129","endLine":65,"endColumn":101},{"ruleId":"120","severity":1,"message":"132","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"133","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"134","line":7,"column":3,"nodeType":"122","messageId":"123","endLine":7,"endColumn":7},{"ruleId":"120","severity":1,"message":"135","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":26},{"ruleId":"120","severity":1,"message":"136","line":14,"column":8,"nodeType":"122","messageId":"123","endLine":14,"endColumn":12},{"ruleId":"120","severity":1,"message":"137","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":16},{"ruleId":"120","severity":1,"message":"138","line":16,"column":8,"nodeType":"122","messageId":"123","endLine":16,"endColumn":20},{"ruleId":"120","severity":1,"message":"139","line":20,"column":7,"nodeType":"122","messageId":"123","endLine":20,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":78,"column":6,"nodeType":"142","endLine":78,"endColumn":15,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":1,"nodeType":"146","endLine":11,"endColumn":3},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Divider' is defined but never used.","'Learn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'useSpeechContext' is defined but never used.","'List' is defined but never used.","'InfoCard' is defined but never used.","'LocalAtmIcon' is defined but never used.","'element' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["149"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"152","text":"153"},[2929,2938],"[createTransaction, formData, segment]"]